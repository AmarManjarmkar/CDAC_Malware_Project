import streamlit as st
from Feature_Extraction import GetHeader, CreateDataframe
from utils import*




#Setting webpage configuration
st.set_page_config(page_title = "Malware Detection",
                   layout="wide",
                   initial_sidebar_state="expanded",
                   page_icon="🐞")

#Webpage title
st.title("Malware Detection using Machine Learning")

with st.sidebar:
    st.title("Welcome to the Malware Detection Project")
    st.markdown("""In a world where digital threats are constantly evolving, ensuring the security of computer 
        systems and networks is of paramount importance. Our project aims to tackle this challenge
        by leveraging machine learning techniques to identify whether an executable (.exe) file is
        benign or potentially malicious. 
                """)
    
    st.image("items/malware.png")

# Setting Background Image
main_bg = "items/background.png"
set_bg(main_bg)

#Upload box 
uploaded_file = st.file_uploader(
    "Upload Exe file to check whether the exe is malicious or not", type=["exe"],
    accept_multiple_files=False)


if uploaded_file is not None:
    # File processing function call here
    file_content = uploaded_file.read()      # Read the content of the uploaded file
    
    #Generating PE
    pe = GetPE(file_content)
    df = CreateDataframe(GetHeader(pe=pe))

    #Display extracted features
    st.subheader('Extracted Features', divider='rainbow')
    st.write(df)
    
    
    #Creating container
    with st.container():
        st.write("---")
        
        #Creating two columns
        left_column, right_column = st.columns(2)
    
        #Designing left_column
        with left_column:
            
            #Loading predict model
            model = load_object("items/Catboost2OverSmote12.pkl")
            
            #Making prediction
            prediction = model.predict(df)
            st.header('Prediction', divider='rainbow')
            
            
            if prediction==0:
                st.subheader("**The file is predicted as Benign.**")
            else:
                st.subheader("**The file is predicted as Malicious.**")

            st.warning('Please note that prediction is based on probabilities and there is a possibility of incorrect prediction.', icon="⚠️")
            st.write("Learning more about [**Malware >**](https://consumer.ftc.gov/articles/how-recognize-remove-avoid-malware)")
        
        #Designing right column        
        with right_column:
            
            predictions = model.predict_proba(df)
            class_probabilities = predictions[0]
            st.header("Probablity Distriution between classes", divider='rainbow')
            # app_bg_color = st.get_option('theme.backgroundColor')
            Makegraphplotly(class_probabilities)


            
            
        
    
